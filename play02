---
- name: Initialize Kubernetes cluster with kubeadm and Calico on Ubuntu
  hosts: all
  become: true
  vars:
    k8s_version: "1.22.5-00"
    cni_version: "v3.20.0"
    calico_version: "v3.20.0"
    cluster_name: "my-kubernetes-cluster"
    pod_subnet: "192.168.0.0/16"
  tasks:
    - name: Install required packages
      apt:
        name: "{{ item }}"
        state: present
      with_items:
        - apt-transport-https
        - ca-certificates
        - curl
        - gnupg-agent
        - software-properties-common

    - name: Add Kubernetes GPG key
      apt_key:
        url: https://packages.cloud.google.com/apt/doc/apt-key.gpg
        state: present

    - name: Add Kubernetes APT repository
      apt_repository:
        repo: deb https://apt.kubernetes.io/ kubernetes-xenial main
        state: present
        filename: kubernetes.list

    - name: Install Kubernetes components
      apt:
        name: "{{ item }}"
        state: present
        update_cache: yes
      with_items:
        - kubelet={{ k8s_version }}
        - kubeadm={{ k8s_version }}
        - kubectl={{ k8s_version }}

    - name: Initialize Kubernetes cluster with kubeadm
      command: kubeadm init --pod-network-cidr {{ pod_subnet }} --apiserver-advertise-address "{{ hostvars[inventory_hostname]['ansible_host'] }}" --kubernetes-version {{ k8s_version }} --node-name "{{ inventory_hostname }}" --control-plane-endpoint="{{ cluster_name }}"
      args:
        creates: /etc/kubernetes/admin.conf
      register: kubeadm_output

    - name: Set up kubectl configuration
      command: mkdir -p $HOME/.kube && cp /etc/kubernetes/admin.conf $HOME/.kube/config
      args:
        creates: $HOME/.kube/config

    - name: Install Calico CNI plugin
      command: kubectl apply -f https://docs.projectcalico.org/{{ calico_version }}/manifests/calico.yaml

    - name: Install Calico RBAC manifests
      command: kubectl apply -f https://docs.projectcalico.org/{{ calico_version }}/manifests/rbac.yaml

    - name: Label the node
      command: kubectl label node {{ inventory_hostname }} node-role.kubernetes.io/master=

    - name: Generate join command for worker nodes
      command: kubeadm token create --print-join-command
      register: join_command

    - name: Save join command to file
      copy:
        content: "{{ join_command.stdout_lines[0] }}"
        dest: /tmp/join-command.txt

